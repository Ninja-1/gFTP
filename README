____________/\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\___
____________\/\\\///////////__\///////\\\/////__\/\\\/////////\\\_
__/\\\\\\\\__\/\\\___________________\/\\\_______\/\\\_______\/\\\_
__/\\\////\\\_\/\\\\\\\\\\\___________\/\\\_______\/\\\\\\\\\\\\\/__
__\//\\\\\\\\\_\/\\\///////____________\/\\\_______\/\\\/////////____
____\///////\\\_\/\\\___________________\/\\\_______\/\\\_____________
_____/\\_____\\\_\/\\\___________________\/\\\_______\/\\\_____________
_____\//\\\\\\\\__\/\\\___________________\/\\\_______\/\\\_____________
_______\////////___\///____________________\///________\///______________

================================ gFTP ===================================

About
-----
gFTP is a FTP plugin for Geany. Navigate the FTP server, download a file and 
edit it in Geany. Then save the file and upload it automatically.

It works like NppFTP for Notepad++ on Windows and a little like FireFTP for Firefox.


Features
--------
 * FTP profiles.
 * Download -> Edit -> Save -> Upload.
 * SFTP/TLSv1/SSLv3 authentication.
 * Cache directory listings.
 * Proxy profiles.
 * Import NppFTP/FileZilla profiles.


Usage
-----
You may need to add a profile first. Fill the basic info like hostname, 
username and password. You can leave the username and password blank, and 
it will prompt for them when you log in. Passwords are simply encrypted. 
If you care about your FTP account security, you can choose SFTP authentication 
(if your FTP server supports) or leave password blank. gFTP currently supports 
SFTP/TLSv1/SSLv3 authenticaiton. When you choose SFTP, you can specify where 
the private and public key located. gFTP doesn't understand and can't generate 
Putty's .ppk file right now. You can leave it blank to use default keys located 
in ~/.ssh folder.

When you connect to a FTP server, gFTP may navigate to the 'Remote' directory
for you. When you double click a file, it will be downloaded to a temporary 
folder (/tmp/gFTP/). For example, when you connect to ftp.mozilla.org anonymously 
and open the README file in the root folder, it will be downloaded to 
/tmp/gFTP/anonymous@ftp.mozilla.org/README and opened in Geany if Geany supports
reading this kind of file. If you specify the 'Local' directory, files will be 
downloaded to that directory.


Requirements
------------
 * libcurl4-openssl-dev 7.21+ (http://curl.haxx.se/download.html)
 * libgtk2.0-dev
 * libxml2-dev

Testing this plugin in Geany
----------------------------
It's convenient to test building plugins in Geany. Here's my experience: 

 * Download & Install libcurl4-openssl-dev 7.21+ . e.g. for Debian users:
   http://packages.debian.org/squeeze/libcurl4-openssl-dev
   - sudo add-apt-repository "deb http://ftp.cn.debian.org/debian squeeze main"
   - sudo apt-get update
   - sudo apt-get install libcurl4-openssl-dev
   
 * Open gFTP.c in Geany and click Build > Set Build Commands.
   In C commands (Build), type 
   gcc -shared -Wall -fPIC -o "%e.so" "%f" `pkg-config libxml-2.0 --cflags --libs libcurl geany`
   
   Set the Extra Plugin Path (Edit > Preference > General) to where the 
   new gFTP.so is built. To test, press F9 or click Build > Build.
   
   To run a new Geany instance to test the newly generated plugin. It gets  
   better if you set a global keyboard shortcut to run Geany. To get more info, 
   run 'geany -v' in terminal instead.
   
 * To test FTP or that with TLS/SSL authentication locally, use vsftpd.
   Here's a sample configuration for vsftpd:
   $ sudo mkdir /etc/vsftpd/
   $ cd /etc/vsftpd/
   $ sudo /usr/bin/openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout vsftpd.pem -out vsftpd.pem
   Then, you may need to provide information for the certificate. After that, 
   $ sudo geany /etc/vsftpd.conf
   Uncomment several necessary lines, then append or modify these lines:
      ssl_enable=YES
      allow_anon_ssl=YES
      force_local_data_ssl=YES
      force_local_logins_ssl=YES
      ssl_tlsv1=YES
      ssl_sslv2=NO
      ssl_sslv3=NO
      rsa_cert_file=/etc/vsftpd/vsftpd.pem
   If you want to set the port number, append this: listen_port=123 (e.g.).
   
 * To test SFTP locally, use OpenSSH.


Contact developers
------------------
 * E-mail: caiguanhao@gmail.com
